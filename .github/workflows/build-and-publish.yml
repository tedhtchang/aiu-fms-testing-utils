name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI
on:
  release:
    types: [published]

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0 # Fetch tags for setuptools_scm
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install build tools
        run: python3 -m pip install build setuptools_scm twine
      - name: Build a binary wheel
        run: python3 -m build -w
      - name: Check the bianry wheel
        run: twine check dist/*
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
  
  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    environment: # 1. create new deployment environment in gh for security and for trusted publisher
      name: testpypi
      url: https://test.pypi.org/project/aiu-fms-testing-utils
    permissions:
      id-token: write  # Required for Trusted Publishing
    if: github.event_name == 'release'
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      # 2. Add github as trusted publisher in pypi. This enables publishing without credentials from env variables.
      - name: Publish distribution 📦 to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/ # testpyi api endpoint
          verbose: true

  # publish-to-pypi:
  #   name: Publish Python 🐍 distribution 📦 to PyPI
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment: # 1. create new deployment environment in gh
  #     name: pypi
  #     url: https://pypi.org/project/aiu-fms-testing-utils
  #   permissions:
  #     id-token: write  # Required for Trusted Publishing
  #   if: github.event_name == 'release'
  #   steps:
  #     - name: Download all the dists
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-package-distributions
  #         path: dist/
  #     # 2. setting github as trusted publisher in pypi. This enables publishing without using credentials from env
  #     - name: Publish distribution 📦 to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         repository-url: https://test.pypi.org/legacy/ # pypi api endpoint
  #         verbose: false